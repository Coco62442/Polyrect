{"version":3,"file":"js/16.b15d5381.js","mappings":"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","sources":["webpack://polyrecte/./src/views/EleveView/EleveView.vue","webpack://polyrecte/./src/views/EleveView/EleveView.vue?7774"],"sourcesContent":["<template>\n    <div>\n        <button v-on:click='eleveLogout()' class=\"deconnexion\">Déconnexion</button>\n\n        <ul class=\"ulGlobal\" v-for=\"(mat, index) in matieres\" v-bind:key=\"mat\">\n            <li>{{ mat.nom }}</li>\n            <ul class=\"notesMat\" v-for=\"note in notesParMatiere[index]\" v-bind:key=\"note\">\n                <li class=\"notesMat\">{{ note.note }}</li>\n            </ul>\n            <li v-if=\"moyMat[index] != undefined\"> Moyenne: {{ moyMat[index] }}</li>\n        </ul>\n        <li>Moyenne générale: <span v-if=\"moy != undefined\">{{ moy }}</span></li>\n        <h4>Tes absences:</h4>\n        <div v-for=\"absence in listeAbsence\" :key=\"absence._id\" class=\"absence\">\n            <ul>\n\t\t\t\t<li>\n                \tDate: {{ absence.date }}\n            \t</li>\n\t\t\t\t<li>\n\t\t\t\t\tJustifie: {{ absence.justifie }}\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tJustification: {{ absence.justification }}\n\t\t\t\t</li>\n\t\t\t</ul>\n        </div>\n\t\t<div class=\"container\">\n\t\t\t<form @submit.prevent=\"putEleve\" class=\"form\">\n\t\t\t\t<h4>Formulaire pour mettre à jour tes informations: </h4>\n\t\t\t\t<div>\n\t\t\t\t<input v-model=\"emailPut\" type=\"email\" placeholder=\"Entrer un email\">\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t<input v-model=\"mdpPut\" type=\"password\" placeholder=\"Entrer un mot de passe\">\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\">Mettre à jour</button>\n\t\t\t</form>\n\t\t</div>\n    </div>\n</template>\n\n\n<script>\n\n    const SERV = 'https://polyrecte-serveur.herokuapp.com/';\n\n    const API_URL_MAT = SERV + 'matiere';\n    const API_URL_NOTE = SERV + 'note';\n    const API_URL_ELEVE = SERV + 'eleve';\n    const API_URL_ABSENCE = SERV + 'absence';\n\n    export default {\n        name: 'eleve',\n        data: () => ({\n            id: localStorage.getItem('id'),\n            eleve: [],\n            matieres: [],\n            notesParMatiere: [],\n            moyMat: [],\n            emailPut: null,\n            mdpPut: null,\n            listeAbsence: [],\n        }),\n        beforeMount(){\n            this.getListMatieres()\n            .then(() => {\n                this.getNotesByMatiere();\n            });\n            this.getListeAbsence();\n        },\n        computed: {\n            moy() {\n                var moyTotal = 0;\n                var vide = 0;\n                for (let i = 0; i < this.notesParMatiere.length; i++) {\n                    if (this.notesParMatiere[i].length > 0) {\n                        var total = 0;\n                        var nbr = 0;\n                    \n                        for (let j = 0; j < this.notesParMatiere[i].length; j++) {\n                            total += this.notesParMatiere[i][j].note;\n                            nbr += 1;\n                        };\n                        this.moyMat[i] = total/nbr;\n                        moyTotal += this.moyMat[i];\n                    }\n                    else {\n                        vide += 1;\n                    };\n                };\n                return moyTotal/(this.notesParMatiere.length - vide);\n            }\n        },\n        methods: {\n            eleveLogout() {\n                localStorage.removeItem('token');\n                localStorage.removeItem('id');\n                localStorage.clear();\n                this.$router.push('/eleve');\n            },\n\n            async getListMatieres() {\n                try {\n                    let repMatiere = await fetch(API_URL_MAT, {\n                        headers: {\n                            'content-type': 'application/json',\n                            'authorization': localStorage.getItem('token'),\n                        }\n                    });\n                    if (repMatiere.ok) {\n                        let data = await repMatiere.json();\n                        this.matieres = data.mats;\n                    }\n                    else {\n                        if (repMatiere.status == 401) {\n                                alert('Vous n\\'êtes plus connecté');\n                                this.$router.push('/eleve');\n                            }\n                        else {\n                            console.log(\"Erreur du serveur\");\n                            alert(\"Le chargement des donnés n'a pas pu être fait\");\n                        };\n                    };\n                } catch (error) {\n                    console.log(err);\n                }\n            },\n\n            async getNotesByMatiere() {\n                for (let i = 0; i < this.matieres.length; i++) {\n                    try {\n                        let repNote = await fetch(API_URL_NOTE + '/note/' + this.id + '/' + this.matieres[i]._id, {\n                            headers: {\n                                'content-type': 'application/json',\n                                'authorization': localStorage.getItem('token'),\n                            }\n                        });\n                        if (repNote.ok) {\n                            let data = await repNote.json();\n                            this.notesParMatiere[i] = data.notes;\n                        }\n                        else {\n                            if (repNote.status == 401) {\n                                    alert('Vous n\\'êtes plus connecté');\n                                    this.$router.push('/eleve');\n                                }\n                            else {\n                                alert('Problème du serveur');\n                            };\n                        };\n                    }\n                    catch{\n                        console.log(\"err\");\n                    }\n                }\n            },\n\n            async putEleve() {\n                await fetch(API_URL_ELEVE + '/' + this.id, {\n                    method: \"PUT\",\n                    body: JSON.stringify({\n                        email: this.emailPut,\n                        mdp: this.mdpPut\n                    }),\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                })\n                .then(response => {\n                    if (response.ok) {\n                        alert('Informations mise à jour');\n\t\t\t\t\t\tthis.emailPut = '';\n\t\t\t\t\t\tthis.mdpPut = '';\n                    }\n                    else {\n                        if (response.status == 401) {\n                                alert('Vous n\\'êtes plus connecté');\n                                this.$router.push('/eleve');\n                            }\n                        else {\n                            alert('Problème lors de la mise à jour de l\\'élève');\n                        };\n                    };\n                });\n            },\n\n            async getListeAbsence() {\n                try {\n                    let repAbsence = await fetch(API_URL_ABSENCE, {\n                        headers: {\n                            'content-type': 'application/json',\n                            'authorization': localStorage.getItem('token'),\n                        }\n                    });\n                    if (repAbsence.ok) {\n                        let data = await repAbsence.json();\n                        this.listeAbsence = data.absences;\n                        for (let i = 0; i < this.listeAbsence.length; i++) {\n                            if (this.listeAbsence[i].justifie) {\n                                this.listeAbsence[i].justifie = 'Oui';\n                            }\n                            else {\n                                this.listeAbsence[i].justifie = 'Non';\n                            };\n                        };\n                    }\n                    else {\n                        if (repAbsence.status == 401) {\n                                alert('Vous n\\'êtes plus connecté');\n                                this.$router.push('/eleve');\n                            }\n                        else {\n                            alert('Problème du serveur');\n                        };\n                    };\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n        },\n    }\n</script>\n\n<style scoped>\n.absence {\n    display: inline-block;\n}\n\n.ulGlobal {\n\tmargin: 3% auto;\n\twidth: 30%;\n}\n\n.notesMat {\n\tmargin: auto;\n\tdisplay: inline;\n}\n\n</style>","import { render } from \"./EleveView.vue?vue&type=template&id=0f3da527&scoped=true\"\nimport script from \"./EleveView.vue?vue&type=script&lang=js\"\nexport * from \"./EleveView.vue?vue&type=script&lang=js\"\n\nimport \"./EleveView.vue?vue&type=style&index=0&id=0f3da527&scoped=true&lang=css\"\n\nimport exportComponent from \"/mnt/c/Users/coren/OneDrive/Documents/Copie Polyrecte/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0f3da527\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","type","_createElementBlock","onClick","$options","_Fragment","_renderList","_ctx","mat","index","key","_toDisplayString","nom","note","undefined","_hoisted_2","_hoisted_4","_hoisted_5","absence","_id","date","justifie","justification","onSubmit","_hoisted_7","$event","placeholder","_hoisted_8","SERV","API_URL_MAT","API_URL_NOTE","API_URL_ELEVE","API_URL_ABSENCE","name","data","id","localStorage","getItem","eleve","matieres","notesParMatiere","moyMat","emailPut","mdpPut","listeAbsence","beforeMount","this","getListMatieres","then","getNotesByMatiere","getListeAbsence","computed","moy","moyTotal","vide","i","length","total","nbr","j","methods","eleveLogout","removeItem","clear","$router","push","async","repMatiere","fetch","headers","ok","json","mats","status","alert","console","log","error","err","repNote","notes","method","body","JSON","stringify","email","mdp","response","repAbsence","absences","__exports__","render"],"sourceRoot":""}