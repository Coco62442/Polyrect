"use strict";(self["webpackChunkpolyrecte"]=self["webpackChunkpolyrecte"]||[]).push([[359],{1359:function(t,o,e){e.r(o),e.d(o,{default:function(){return S}});var n=e(3396),s=e(7139),a=e(9242);const l=(0,n.Uk)("Ajouter des Notes"),r=(0,n.Uk)("Modifier des Notes"),i=(0,n.Uk)("Ajouter des Absences"),u=(0,n.Uk)("Modifier des Absences"),c=(0,n.Uk)("Mettre à jour votre profil"),p=(0,n._)("hr",null,null,-1),d=["onClick"],g=["onSubmit"],h=["onUpdate:modelValue"],f=["onUpdate:modelValue"],m=(0,n._)("button",{class:"input",type:"submit"},"Mettre à jour",-1),b=["onClick"];function w(t,o,e,w,y,k){const v=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("div",null,[(0,n._)("nav",null,[(0,n.Wm)(v,{to:"/loginProf"},{default:(0,n.w5)((()=>[l])),_:1}),(0,n.Wm)(v,{to:"/modifNote"},{default:(0,n.w5)((()=>[r])),_:1}),(0,n.Wm)(v,{to:"/ajoutAbsence"},{default:(0,n.w5)((()=>[i])),_:1}),(0,n.Wm)(v,{to:"/modifAbsence"},{default:(0,n.w5)((()=>[u])),_:1}),(0,n.Wm)(v,{to:"/profilProf"},{default:(0,n.w5)((()=>[c])),_:1})]),(0,n._)("button",{onClick:o[0]||(o[0]=t=>k.profLogout()),class:"deconnexion"},"Déconnexion"),p,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.listeEleve,((o,e)=>((0,n.wg)(),(0,n.iD)("div",{key:o._id},[(0,n._)("li",null,[(0,n._)("a",{href:"#",onClick:t=>k.getAllNotesByEleve(o._id,e)},[(0,n._)("p",null,(0,s.zw)(o.prenom)+" "+(0,s.zw)(o.nom),1)],8,d),((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.notesMat,(s=>(0,n.wy)(((0,n.wg)(),(0,n.iD)("div",{key:s},[(0,n._)("form",{onSubmit:(0,a.iM)((t=>k.putNote(s._id,s.note,s.num)),["prevent"])},[(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":t=>s.note=t,class:"input",type:"number",min:"0",max:"20"},null,8,h),[[a.nr,s.note]])]),(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":t=>s.num=t,class:"input",type:"number",min:"0"},null,8,f),[[a.nr,s.num]])]),m],40,g),(0,n._)("button",{onClick:t=>k.delNote(s._id,o._id,e),class:"input",type:"submit"},"Supprimer la note",8,b)])),[[a.F8,t.showNotes[e]]]))),128))])])))),128))])}const y=top.glob.serv,k=y+"eleve",v=y+"matiere",_=y+"note";var E={name:"modifNote",data:()=>({idProf:localStorage.getItem("idProf"),idMat:String,listeEleve:[],notesMat:[],showNotes:[]}),beforeMount(){this.getListeEleves().then((()=>{this.notShowMessage()})),this.getIdMat()},methods:{profLogout(){localStorage.removeItem("tokenProf"),localStorage.removeItem("idProf"),localStorage.clear(),this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info")},async getListeEleves(){try{let t=await fetch(k,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenProf")}});if(t.ok){let o=await t.json();this.listeEleve=o.eleves}else 401==t.status?(this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info")):(console.log("Erreur du serveur"),top.glob.toast("Le chargement des donnés n'a pas pu être fait","warning"))}catch(t){console.log(t),top.glob.toast("Erreur","danger")}},notShowMessage(){for(let t=0;t<this.listeEleve.length;t++)this.showNotes[t]=!1},async getIdMat(){try{let t=await fetch(v+"/"+this.idProf,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenProf")}});if(t.ok){let o=await t.json();this.idMat=o.mat._id}else 401==t.status?(this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info")):(console.log("Erreur du serveur"),top.glob.toast("Le chargement des donnés n'a pas pu être fait","warning"))}catch(t){console.log(t),top.glob.toast("Erreur","danger")}},async getAllNotesByEleve(t,o){try{this.notShowMessage();let e=await fetch(_+"/note/"+t+"/"+this.idMat,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenProf")}});if(e.ok){let t=await e.json();this.notesMat=t.notes,this.showNotes[o]=!0}else 401==e.status&&(this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info"))}catch{console.log("err"),top.glob.toast("Erreur","danger")}return!1},async putNote(t,o,e){await fetch(_+"/"+t,{method:"PUT",body:JSON.stringify({note:o,num:e}),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenProf")}}).then((t=>{t.ok?top.glob.toast("Note mis à jour","success"):401==t.status?(this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la mise à jour de la note","warning")})).catch((t=>{console.log(t),top.glob.toast("Erreur","danger")}))},async delNote(t,o,e){const n=confirm("Voulez-vous confirmez la supression?");if(n)try{let n=await fetch(_+"/"+t,{method:"DELETE",headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenProf")}});n.ok?(top.glob.toast("Note supprimée","success"),this.getAllNotesByEleve(o,e)):401==n.status?(this.$router.push("/prof"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la supression de la note","warning")}catch(s){console.log(s),top.glob.toast("Erreur","danger")}}}},N=e(89);const M=(0,N.Z)(E,[["render",w]]);var S=M}}]);
//# sourceMappingURL=359.7138cf61.js.map