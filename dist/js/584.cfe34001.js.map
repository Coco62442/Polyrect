{"version":3,"file":"js/584.cfe34001.js","mappings":"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","sources":["webpack://polyrecte/./src/views/ProfView/ModifAbsenceView.vue","webpack://polyrecte/./src/views/ProfView/ModifAbsenceView.vue?ec9c"],"sourcesContent":["<template>\n    <div>\n        <nav>\n            <router-link to=\"/loginProf\">Ajouter des Notes</router-link>\n            <router-link to=\"/modifNote\">Modifier des Notes</router-link>\n            <router-link to=\"/ajoutAbsence\">Ajouter des Absences</router-link>\n            <router-link to=\"/modifAbsence\">Modifier des Absences</router-link>\n            <router-link to=\"/profilProf\">Mettre à jour votre profil</router-link>\n        </nav>\n        <button v-on:click='profLogout()' class=\"deconnexion\">Déconnexion</button>\n        <hr>\n        <div v-for=\"(eleve, index1) in listeEleve\" :key=\"eleve._id\">\n            <li>\n                <a href=\"#\" v-on:click='getAllAbsencesByEleve(eleve._id, index1)'>\n                    {{ eleve.prenom }} {{ eleve.nom }}\n                </a>\n                <div v-for=\"absence in listeAbsence\" :key=\"absence\" v-show=\"showFormAbsence[index1]\">\n                    <form @submit.prevent=\"putAbsence(absence._id, absence.justification, absence.justifie, absence.date, eleve._id)\">\n                        <div>\n                            <input v-model=\"absence.justification\" class=\"input\" type=\"text\" id=\"justification\" placeholder=\"Entrer une justification d'absence\">\n                        </div>\n                        <div>\n                            <input v-model=\"absence.justifie\" class=\"input\" type=\"checkbox\" checked id=\"justifie\">\n                        </div>\n                        <div>\n                            <input v-model=\"absence.date\" class=\"input\" type=\"text\" id=\"date\">\n                        </div>\n                        <button class=\"input\" type=\"submit\">Mettre à jour</button>\n                    </form>\n                    <button v-on:click='delAbsence(absence._id, eleve._id, index1)' class=\"input\" type=\"submit\">Supprimer l'absence</button>\n                </div>\n            </li>\n        </div>\n    </div>\n</template>\n\n<script>\n\nconst SERV = 'https://polyrecte-serveur.herokuapp.com/';\nconst API_URL_ABSENCE = SERV + 'absence';\nconst API_URL_ELEVE = SERV + 'eleve';\n\nexport default {\n    name: 'modifAbsence',\n    data: () => ({\n        listeEleve: [],\n        listeAbsence: [],\n        showFormAbsence: [],\n        error: '',\n    }),\n    beforeMount() {\n        this.getListeEleves()\n        .then(() => {\n            this.notShowAbsences();\n        });\n    },\n    methods: {\n        profLogout() {\n            localStorage.removeItem('token');\n            localStorage.removeItem('id');\n            localStorage.clear();\n            this.$router.push('/prof');\n        },\n\n        async getListeEleves() {\n            try {\n                let repEleve = await fetch(API_URL_ELEVE, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                });\n                if (repEleve.ok) {\n                    let data = await repEleve.json();\n                    this.listeEleve = data.eleves;\n                }\n                else {\n                    if (repEleve.status == 401) {\n                            alert('Vous n\\'êtes plus connecté');\n                            this.$router.push('/prof');\n                        }\n                    else {\n                        console.log(\"Erreur du serveur\");\n                    alert(\"Le chargement des donnés n'a pas pu être fait\");\n                    };\n                };\n            } catch (error) {\n                console.log(error);\n            }\n        },\n\n        notShowAbsences() {\n            for (let i = 0; i < this.listeEleve.length; i++) {\n                this.showFormAbsence[i] = false;\n            }\n        },\n\n        async getAllAbsencesByEleve(idEleve, index) {\n            try {\n                this.notShowAbsences();\n                let repAbsences = await fetch(API_URL_ABSENCE + '/' + idEleve, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                });\n                if (repAbsences.ok) {\n                    let data = await repAbsences.json();\n                    this.listeAbsence = data.absence;\n                    this.showFormAbsence[index] = true;\n                    console.log(this.listeAbsence, this.listeAbsence[0].justification)\n                }\n                else {\n                    if (repAbsences.status == 401) {\n                        alert('Vous n\\'êtes plus connecté');\n                        this.$router.push('/prof');\n                    }\n                };\n            }\n            catch{\n                console.log(\"err\");\n            }\n            return false;\n        },\n\n        async putAbsence(id, justification, justifie, date, eleve) {\n            await fetch(API_URL_ABSENCE + '/' + id, {\n                method: \"PUT\",\n                body: JSON.stringify({\n                    justification: justification,\n                    justifie: justifie,\n                    date: date,\n                    eleve: eleve\n                }),\n                headers: {\n                    'content-type': 'application/json',\n                    'authorization': localStorage.getItem('token'),\n                }\n            })\n            .then(response => {\n                if (response.ok) {\n\t\t\t\t\talert(\"Absence mis à jour\");\n                }\n                else {\n                    if (response.status == 401) {\n                            alert('Vous n\\'êtes plus connecté');\n                            this.$router.push('/prof');\n                        }\n                    else {\n                        alert('Problème lors de la mise à jour de l\\'absence');\n                    };\n                };\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n        },\n\n        async delAbsence(idAbsence, idEleve, index) {\n                const rep = confirm('Voulez-vous confirmez la supression?');\n                if (rep) {\n                    try {\n                        let repDel = await fetch(API_URL_ABSENCE + '/' + idAbsence, {\n                            method: \"DELETE\",\n                            headers: {\n                                'content-type': 'application/json',\n                                'authorization': localStorage.getItem('token'),\n                            }\n                        });\n                        if (repDel.ok) {\n                            alert('Absence supprimée');\n                            this.getAllAbsencesByEleve(idEleve, index);\n                        }\n                        else {\n                            if (repDel.status == 401) {\n                                    alert('Vous n\\'êtes plus connecté');\n                                    this.$router.push('/prof');\n                                }\n                            else {\n                                alert('Problème lors de la supression de l\\'absence');\n                            };\n                        };\n                    } catch (error) {\n                        console.log(error);\n                    };\n                };\n            },\n    }\n}\n\n</script>","import { render } from \"./ModifAbsenceView.vue?vue&type=template&id=06ba16c6\"\nimport script from \"./ModifAbsenceView.vue?vue&type=script&lang=js\"\nexport * from \"./ModifAbsenceView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/c/Users/coren/OneDrive/Documents/Copie Polyrecte/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","type","_createElementBlock","_createVNode","_component_router_link","to","onClick","$options","_hoisted_6","_Fragment","_renderList","_ctx","eleve","index1","key","_id","href","prenom","_toDisplayString","nom","_hoisted_7","absence","onSubmit","justification","justifie","date","$event","id","placeholder","checked","_hoisted_12","_hoisted_13","SERV","API_URL_ABSENCE","API_URL_ELEVE","name","data","listeEleve","listeAbsence","showFormAbsence","error","beforeMount","this","getListeEleves","then","notShowAbsences","methods","profLogout","localStorage","removeItem","clear","$router","push","async","repEleve","fetch","headers","getItem","ok","json","eleves","status","alert","console","log","i","length","idEleve","index","repAbsences","method","body","JSON","stringify","response","catch","err","idAbsence","rep","confirm","repDel","getAllAbsencesByEleve","__exports__","render"],"sourceRoot":""}