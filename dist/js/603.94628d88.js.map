{"version":3,"file":"js/603.94628d88.js","mappings":"iNAGyC,qB,WACA,sB,WACG,wB,WACA,yB,WACF,8B,6BAWtCA,EAAAA,EAAAA,GAAmC,aAA5B,wBAAoB,G,GAKnBA,EAAAA,EAAAA,GAA+D,SAAxDC,MAAM,QAAQC,KAAK,SAASC,GAAG,SAASC,MAAM,WAArD,S,0EAtBRC,EAAAA,EAAAA,IAwBM,aAvBFL,EAAAA,EAAAA,GAMM,aALFM,EAAAA,EAAAA,IAA4DC,EAAA,CAA/CC,GAAG,cAAY,C,kBAAC,IAAiB,M,OAC9CF,EAAAA,EAAAA,IAA6DC,EAAA,CAAhDC,GAAG,cAAY,C,kBAAC,IAAkB,M,OAC/CF,EAAAA,EAAAA,IAAkEC,EAAA,CAArDC,GAAG,iBAAe,C,kBAAC,IAAoB,M,OACpDF,EAAAA,EAAAA,IAAmEC,EAAA,CAAtDC,GAAG,iBAAe,C,kBAAC,IAAqB,M,OACrDF,EAAAA,EAAAA,IAAsEC,EAAA,CAAzDC,GAAG,eAAa,C,kBAAC,IAA0B,M,SAE5DR,EAAAA,EAAAA,GAA0E,UAA7DS,QAAK,eAAEC,EAAAA,cAAcT,MAAM,eAAc,gBACtDD,EAAAA,EAAAA,GAcO,QAdAW,SAAM,8BAAUD,EAAAA,YAAAA,EAAAA,cAAAA,IAAU,eAAjC,gBACIL,EAAAA,EAAAA,IAKMO,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALuBC,EAAAA,YAAU,CAA1BC,EAAMC,M,WAAnBX,EAAAA,EAAAA,IAKM,OALoCY,IAAKF,EAAKG,KAApD,EACIlB,EAAAA,EAAAA,GAGK,YAFDA,EAAAA,EAAAA,GAAuC,UAAAmB,EAAAA,EAAAA,IAAjCJ,EAAKK,QAAS,KAACD,EAAAA,EAAAA,IAAGJ,EAAKM,KAAG,IAE/B,SADDrB,EAAAA,EAAAA,GAAqI,SAA9HC,MAAM,Q,yBAAiBa,EAAAA,KAAKE,GAAKM,EAAGpB,KAAK,SAASqB,IAAI,IAAIC,IAAI,KAAKC,MAAA,gBAAoBtB,GAAG,OAAOuB,YAAY,kBAApH,iBAA8BZ,EAAAA,KAAKE,aAH3C,OAMAhB,EAAAA,EAAAA,GAKM,YAJd2B,GAIc,SAHF3B,EAAAA,EAAAA,GAAkI,SAA3HC,MAAM,Q,qCAAiBa,EAAAA,IAAGQ,GAAEpB,KAAK,SAASqB,IAAI,IAAIE,MAAA,gBAAqBtB,GAAG,MAAMuB,YAAY,gCAAnG,iBAA8BZ,EAAAA,SAIlCc,GAbJ,MAoBR,MAAMC,EAAOC,IAAIC,KAAKC,KAChBC,EAAgBJ,EAAO,QACvBK,EAAcL,EAAO,UACrBM,EAAeN,EAAO,OAI5B,OACIO,KAAM,OACNC,KAAM,KAAM,CACRC,OAAQC,aAAaC,QAAQ,UAC7BC,MAAOC,OACPC,WAAY,GACZC,KAAM,GACNC,IAAKC,SAETC,cACIC,KAAKC,iBACLD,KAAKE,YAETC,QAAS,CAELC,aACIb,aAAac,WAAW,aACxBd,aAAac,WAAW,UACxBd,aAAae,QACbN,KAAKO,QAAQC,KAAK,SAC3B1B,IAAIC,KAAK0B,MAAM,uBAAwB,SAGlCC,uBACI,IACI,IAAIC,QAAiBC,MAAM3B,EAAe,CACtC4B,QAAS,CACL,eAAgB,mBAChB,cAAiBtB,aAAaC,QAAQ,gBAG9C,GAAImB,EAASG,GAAI,CACjB,IAAIzB,QAAasB,EAASI,OAC1Bf,KAAKL,WAAaN,EAAK2B,YAGI,KAAnBL,EAASM,QACTjB,KAAKO,QAAQC,KAAK,SACpC1B,IAAIC,KAAK0B,MAAM,uBAAwB,UAGrBS,QAAQC,IAAI,qBACZrC,IAAIC,KAAK0B,MAAM,gDAAiD,WAG1E,MAAOW,GACLF,QAAQC,IAAIC,GACxBtC,IAAIC,KAAK0B,MAAM,SAAU,YAIrBC,iBACI,IACI,IAAIW,QAAeT,MAAM1B,EAAc,IAAMc,KAAKV,OAAQ,CACtDuB,QAAS,CACL,eAAgB,mBAChB,cAAiBtB,aAAaC,QAAQ,gBAG9C,GAAI6B,EAAOP,GAAI,CACX,IAAIzB,QAAagC,EAAON,OACxBf,KAAKP,MAAQJ,EAAKiC,IAAIpD,SAGD,KAAjBmD,EAAOJ,OACPjB,KAAKO,QAAQC,KAAK,UAGlBU,QAAQC,IAAI,qBACZrC,IAAIC,KAAK0B,MAAM,gDAAiD,YAG1E,MAAOW,GACLF,QAAQC,IAAIC,GACxBtC,IAAIC,KAAK0B,MAAM,SAAU,YAIrBC,mBACI,IAAIa,EAAU,EACd,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,KAAKL,WAAW8B,OAAQD,IACxC,IACI,IAAIE,QAAgBd,MAAMzB,EAAc,CACpCwC,OAAQ,OACRd,QAAS,CACL,eAAgB,mBAChB,cAAiBtB,aAAaC,QAAQ,cAE1CoC,KAAMC,KAAKC,UAAU,CACjBlC,KAAMI,KAAKJ,KAAK4B,GAChBO,QAAS/B,KAAKP,MACduC,MAAOhC,KAAKL,WAAW6B,GAAGtD,IAC1B2B,IAAKG,KAAKH,QAGd6B,EAAQZ,GACRd,KAAKJ,KAAK4B,GAAK,GAGO,KAAlBE,EAAQT,QACRjB,KAAKO,QAAQC,KAAK,SACvC1B,IAAIC,KAAK0B,MAAM,uBAAwB,SAGlBc,GAAW,EAGrB,MAAOU,GACLf,QAAQC,IAAIc,GAC3BnD,IAAIC,KAAK0B,MAAM,SAAU,UAGdc,EACAzC,IAAIC,KAAK0B,MAAM,+GAAgH,YAG/H3B,IAAIC,KAAK0B,MAAM,uCAAwC,WACvDT,KAAKH,IAAM,O,QCrJ3B,MAAMqC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://polyrecte/./src/views/ProfView/ProfView.vue","webpack://polyrecte/./src/views/ProfView/ProfView.vue?2b89"],"sourcesContent":["<template>\n    <div>\n        <nav>\n            <router-link to=\"/loginProf\">Ajouter des Notes</router-link>\n            <router-link to=\"/modifNote\">Modifier des Notes</router-link>\n            <router-link to=\"/ajoutAbsence\">Ajouter des Absences</router-link>\n            <router-link to=\"/modifAbsence\">Modifier des Absences</router-link>\n            <router-link to=\"/profilProf\">Mettre à jour votre profil</router-link>\n        </nav>\n        <button v-on:click='profLogout()' class=\"deconnexion\">Déconnexion</button>\n        <form @submit.prevent=\"creerNotes\">\n            <div v-for=\"(item, index) in listeEleve\" :key=\"item._id\">\n                <li>\n                    <p>{{ item.prenom }} {{ item.nom }}</p>\n                    <input class=\"input\" v-model=\"note[index]\" type=\"number\" min=\"0\" max=\"20\" style=\"width:200px\" id=\"note\" placeholder=\"Entrer la note\">\n                </li>\n            </div>\n            <div>\n\t\t\t\t<label>Numéro du contrôle: </label>\n                <input class=\"input\" v-model=\"num\" type=\"number\" min=\"1\" style=\"width: 200px\" id=\"num\" placeholder=\"Entrer le numéro du contrôle\">\n                <!-- <label for=\"coef\">Coefficient du contrôle</label>\n                <input class=\"input\" type=\"number\" min=\"1\" value=\"1\" id=\"coef\" placeholder=\"Entrer le coefficient\"> -->\n            </div>\n            <input class=\"input\" type=\"submit\" id='submit' value='Valider'>\n        </form>\n    </div>\n</template>\n\n<script>\n\nconst SERV = top.glob.serv;\nconst API_URL_ELEVE = SERV + 'eleve';\nconst API_URL_MAT = SERV + 'matiere';\nconst API_URL_NOTE = SERV + 'note';\n\n\n\nexport default {\n    name: 'prof',\n    data: () => ({\n        idProf: localStorage.getItem('idProf'),\n        idMat: String,\n        listeEleve: [],\n        note: [],\n        num: Number\n    }),\n    beforeMount() {\n        this.getListeEleves();\n        this.getIdMat();\n    },\n    methods: {\n\n        profLogout() {\n            localStorage.removeItem('tokenProf');\n            localStorage.removeItem('idProf');\n            localStorage.clear();\n            this.$router.push('/prof');\n\t\t\ttop.glob.toast(\"Vous êtes déconnecté\", \"info\");\n        },\n\n        async getListeEleves() {\n            try {\n                let repEleve = await fetch(API_URL_ELEVE, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('tokenProf'),\n                    }\n                });\n                if (repEleve.ok) {\n                let data = await repEleve.json();\n                this.listeEleve = data.eleves;\n                }\n                else {\n                    if (repEleve.status == 401) {\n                        this.$router.push('/prof');\n\t\t\t\t\t\ttop.glob.toast(\"Vous êtes déconnecté\", \"info\");\n                    }\n                    else {\n                        console.log(\"Erreur du serveur\");\n                        top.glob.toast(\"Le chargement des donnés n'a pas pu être fait\", \"danger\");\n                    };\n                };\n            } catch (error) {\n                console.log(error);\n\t\t\t\ttop.glob.toast(\"Erreur\", \"danger\");\n            }\n        },\n\n        async getIdMat() {\n            try {\n                let repMat = await fetch(API_URL_MAT + '/' + this.idProf, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('tokenProf'),\n                    }\n                });\n                if (repMat.ok) {\n                    let data = await repMat.json();\n                    this.idMat = data.mat._id;\n                }\n                else {\n                    if (repMat.status == 401) {\n                        this.$router.push('/prof');\n                    }\n                    else {\n                        console.log(\"Erreur du serveur\");\n                        top.glob.toast(\"Le chargement des donnés n'a pas pu être fait\", \"warning\");\n                    };\n                };\n            } catch (error) {\n                console.log(error);\n\t\t\t\ttop.glob.toast(\"Erreur\", \"danger\");\n            }\n        },\n\n        async creerNotes() {\n            var problem = 0;\n            for (let i = 0; i < this.listeEleve.length; i++) {\n                try {\n                    let repNote = await fetch(API_URL_NOTE, {\n                        method: \"POST\",\n                        headers: {\n                            'content-type': 'application/json',\n                            'authorization': localStorage.getItem('tokenProf'),\n                        },\n                        body: JSON.stringify({\n                            note: this.note[i],\n                            matiere: this.idMat,\n                            eleve: this.listeEleve[i]._id,\n                            num: this.num\n                        })\n                    });\n                    if (repNote.ok) {\n                        this.note[i] = \"\";\n                    }\n                    else {\n                        if (repNote.status == 401) {\n                            this.$router.push('/prof');\n\t\t\t\t\t\t\ttop.glob.toast(\"Vous êtes déconnecté\", \"info\");\n                        }\n                        else {\n                            problem += 1;\n                        };\n                    }\n                } catch (erreur) {\n                    console.log(erreur);\n\t\t\t\t\ttop.glob.toast(\"Erreur\", \"danger\");\n                };\n            };\n            if (problem) {\n                top.glob.toast(\"Problème de création là où le formulaire n'est pas vide (Potentiellement le numéro de contrôle existe déjà).\", \"warning\");\n            }\n            else {\n                top.glob.toast(\"Enregistrement efféctué avec succès!\", \"default\");\n                this.num = \"\";\n            };\n        }\n    }\n}\n</script>","import { render } from \"./ProfView.vue?vue&type=template&id=34db36d0\"\nimport script from \"./ProfView.vue?vue&type=script&lang=js\"\nexport * from \"./ProfView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/c/Users/coren/OneDrive/Documents/Ecoles/Polytech/Devoirs et Cours/Année 2021.2022/Polyrecte/GitClient/Polyrect/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","type","id","value","_createElementBlock","_createVNode","_component_router_link","to","onClick","$options","onSubmit","_Fragment","_renderList","_ctx","item","index","key","_id","_toDisplayString","prenom","nom","$event","min","max","style","placeholder","_hoisted_7","_hoisted_8","SERV","top","glob","serv","API_URL_ELEVE","API_URL_MAT","API_URL_NOTE","name","data","idProf","localStorage","getItem","idMat","String","listeEleve","note","num","Number","beforeMount","this","getListeEleves","getIdMat","methods","profLogout","removeItem","clear","$router","push","toast","async","repEleve","fetch","headers","ok","json","eleves","status","console","log","error","repMat","mat","problem","i","length","repNote","method","body","JSON","stringify","matiere","eleve","erreur","__exports__","render"],"sourceRoot":""}