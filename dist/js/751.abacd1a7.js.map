{"version":3,"file":"js/751.abacd1a7.js","mappings":"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","sources":["webpack://polyrecte/./src/views/ProfView/AjoutAbsencesView.vue","webpack://polyrecte/./src/views/ProfView/AjoutAbsencesView.vue?465c"],"sourcesContent":["<template>\n    <div>\n        <nav>\n            <router-link to=\"/loginProf\">Ajouter des Notes</router-link>\n            <router-link to=\"/modifNote\">Modifier des Notes</router-link>\n            <router-link to=\"/ajoutAbsence\">Ajouter des Absences</router-link>\n            <router-link to=\"/modifAbsence\">Modifier des Absences</router-link>\n            <router-link to=\"/profilProf\">Mettre à jour votre profil</router-link>\n        </nav>\n        <button v-on:click='profLogout()' class=\"deconnexion\">Déconnexion</button>\n        <hr>\n        <div v-for=\"(eleve, index1) in listeEleve\" :key=\"eleve._id\">\n            <li>\n                <a href=\"#\" v-on:click='getAllAbsencesByEleve(eleve._id, index1)'>\n                    {{ eleve.prenom }} {{ eleve.nom }}\n                </a>\n                <div v-for=\"absence in listeAbsence\" :key=\"absence\" v-show=\"showFormAbsence[index1]\">\n                    <li>\n                        Date: {{ absence.date }}\n                        Justifié: {{ absence.justifie }}\n                        Justification: {{ absence.justification }}\n                    </li>\n                </div>\n            </li>\n            <div v-show=\"showFormAbsence[index1]\">\n                <form @submit.prevent=\"creerAbsence(eleve._id, index1)\">\n                    <div>\n                        <input v-model=\"justification\" class=\"input\" type=\"text\" id=\"justification\" placeholder=\"Entrer une justification d'absence\">\n                    </div>\n                    <div>\n                        <input v-model=\"justifie\" class=\"input\" type=\"checkbox\" checked id=\"justifie\">\n                    </div>\n                    <div>\n                        <input v-model=\"date\" class=\"input\" type=\"text\" id=\"date\">\n                    </div>\n                    <button type=\"submit\" class=\"input\">Mettre à jour</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nconst SERV = 'https://polyrecte-serveur.herokuapp.com/'\nconst API_URL_ELEVE = SERV + 'eleve';\nconst API_URL_ABSENCE = SERV + 'absence';\n\nexport default {\n    name: 'abscence',\n    data: () => ({\n        listeEleve: [],\n        listeAbsence: [],\n        showFormAbsence: [],\n        justification: '',\n        justifie: Boolean,\n        date: '',\n    }),\n    beforeMount() {\n        this.getListeEleves()\n        .then(() => {\n            this.notShowAbsences()\n        })\n    },\n    methods: {\n        profLogout() {\n            localStorage.removeItem('token');\n            localStorage.removeItem('id');\n            localStorage.clear();\n            this.$router.push('/prof');\n        },\n\n        async getListeEleves() {\n            try {\n                let repEleve = await fetch(API_URL_ELEVE, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                });\n                if (repEleve.ok) {\n                    let data = await repEleve.json();\n                    this.listeEleve = data.eleves;\n                }\n                else {\n                    if (repEleve.status == 401) {\n                            alert('Vous n\\'êtes plus connecté');\n                            this.$router.push('/prof');\n                        }\n                    else {\n                        console.log(\"Erreur du serveur\");\n                    alert(\"Le chargement des donnés n'a pas pu être fait\");\n                    };\n                };\n            } catch (error) {\n                console.log(error);\n            }\n        },\n\n        notShowAbsences() {\n            for (let i = 0; i < this.listeEleve.length; i++) {\n                this.showFormAbsence[i] = false;\n            }\n        },\n\n        async getAllAbsencesByEleve(idEleve, index) {\n            try {\n                this.notShowAbsences();\n                let repAbsences = await fetch(API_URL_ABSENCE + '/' + idEleve, {\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                });\n                if (repAbsences.ok) {\n                    let data = await repAbsences.json();\n                    this.listeAbsence = data.absence;\n                    this.showFormAbsence[index] = true;\n                    for (let i = 0; i < this.listeAbsence.length; i++) {\n                        if (this.listeAbsence[i].justifie){\n                            this.listeAbsence[i].justifie = 'Oui';\n                        }\n                        else {\n                            this.listeAbsence[i].justifie = 'Non';\n                        };\n                    }\n                }\n                else {\n                    if (repAbsences.status == 401) {\n                            alert('Vous n\\'êtes plus connecté');\n                            this.$router.push('/prof');\n                        }\n                    else {\n                        alert('Erreur lors de la récupération des données');\n                    };\n                };\n            }\n            catch{\n                console.log(\"err\");\n            }\n            return false;\n        },\n\n        async creerAbsence(id, index) {\n            try {\n                let repAbsence = await fetch(API_URL_ABSENCE, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        justifie: this.justifie,\n                        justification: this.justification,\n                        date: this.date,\n                        eleve: id,\n                    }),\n                    headers: {\n                        'content-type': 'application/json',\n                        'authorization': localStorage.getItem('token'),\n                    }\n                });\n                if (repAbsence.ok) {\n                    this.justification = '';\n                    this.justifie = '';\n                    this.date = '';\n                    this.getAllAbsencesByEleve(id, index)\n                    alert(\"Absence ajouté à l'élève\")\n                }\n                else {\n                    if (repAbsence.status == 401) {\n                            alert('Vous n\\'êtes plus connecté');\n                            this.$router.push('/prof');\n                        }\n                    else {\n                        alert('Erreur lors de la création de l\\'absence');\n                    };\n                };\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n}\n</script>","import { render } from \"./AjoutAbsencesView.vue?vue&type=template&id=1259a39e\"\nimport script from \"./AjoutAbsencesView.vue?vue&type=script&lang=js\"\nexport * from \"./AjoutAbsencesView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/mnt/c/Users/coren/OneDrive/Documents/Copie Polyrecte/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","type","class","_createElementBlock","_createVNode","_component_router_link","to","onClick","$options","_hoisted_6","_Fragment","_renderList","_ctx","eleve","index1","key","_id","href","prenom","_toDisplayString","nom","_hoisted_7","absence","date","justifie","justification","onSubmit","$event","id","placeholder","checked","_hoisted_9","SERV","API_URL_ELEVE","API_URL_ABSENCE","name","data","listeEleve","listeAbsence","showFormAbsence","Boolean","beforeMount","this","getListeEleves","then","notShowAbsences","methods","profLogout","localStorage","removeItem","clear","$router","push","async","repEleve","fetch","headers","getItem","ok","json","eleves","status","alert","console","log","error","i","length","idEleve","index","repAbsences","repAbsence","method","body","JSON","stringify","getAllAbsencesByEleve","__exports__","render"],"sourceRoot":""}