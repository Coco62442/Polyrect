"use strict";(self["webpackChunkpolyrecte"]=self["webpackChunkpolyrecte"]||[]).push([[882],{8148:function(t,e,o){o.r(e),o.d(e,{default:function(){return ft}});var n=o(3396),l=o(9242);const a=(0,n.Uk)("Gestion de la base de donnée"),s=(0,n.Uk)("Mettre à jour votre profil"),i=(0,n._)("hr",null,null,-1),r=(0,n._)("h3",null,"Liste des Elèves:",-1),u=["onSubmit"],p=["onUpdate:modelValue"],d=["onUpdate:modelValue"],m=(0,n._)("button",{type:"submit",class:"input"},"Mettre à jour",-1),c=["onClick"],g=(0,n._)("hr",null,null,-1),h={class:"container"},f=(0,n._)("h3",null,"Formulaire de création d'élève:",-1),b=(0,n._)("label",{for:"email"},"Email",-1),y=(0,n._)("label",{for:"prenom"},"Prénom",-1),_=(0,n._)("label",{for:"nom"},"Nom",-1),v=(0,n._)("label",{for:"mdp"},"Mot de passe",-1),w=(0,n._)("button",{type:"submit"},"Ajouter un élève",-1),E=(0,n._)("hr",null,null,-1),k=(0,n._)("h3",null,"Liste des professeurs:",-1),V=["onSubmit"],A=["onUpdate:modelValue"],S=["onUpdate:modelValue"],j=["onUpdate:modelValue"],P=(0,n._)("button",{type:"submit",class:"input"},"Mettre à jour",-1),U=["onClick"],L=(0,n._)("hr",null,null,-1),M={class:"container"},z=(0,n._)("h3",null,"Formulaire de création de professeur:",-1),$=(0,n._)("label",{for:"email"},"Email",-1),x=(0,n._)("label",{for:"prenom"},"Prénom",-1),C=(0,n._)("label",{for:"nom"},"Nom",-1),I=(0,n._)("label",{for:"mdp"},"Mot de passe",-1),D=(0,n._)("label",{for:"dateFinContrat"},"Date de fin de contrat",-1),T=(0,n._)("label",{for:"mat"},"Matiere du professeur",-1),F=(0,n._)("button",{type:"submit"},"Ajouter un professeur",-1),N=(0,n._)("hr",null,null,-1),O=(0,n._)("h3",null,"Liste des matières:",-1),J=["onSubmit"],q=["onUpdate:modelValue"],H=(0,n._)("button",{type:"submit",class:"input"},"Mettre à jour",-1),K=["onClick"],Y=(0,n._)("hr",null,null,-1),Z=(0,n._)("h3",null,"Liste des administrateurs:",-1),W=["onSubmit"],G=["onUpdate:modelValue"],B=["onUpdate:modelValue"],Q=(0,n._)("button",{type:"submit",class:"input"},"Mettre à jour",-1),R=["onClick"],X=(0,n._)("hr",null,null,-1),tt={class:"container"},et=(0,n._)("h3",null,"Formulaire de création d'administrateur:",-1),ot=(0,n._)("label",{for:"email"},"Email",-1),nt=(0,n._)("label",{for:"prenom"},"Prénom",-1),lt=(0,n._)("label",{for:"nom"},"Nom",-1),at=(0,n._)("label",{for:"mdp"},"Mot de passe",-1),st=(0,n._)("button",{type:"submit"},"Ajouter un administrateur",-1);function it(t,e,o,it,rt,ut){const pt=(0,n.up)("router-link");return(0,n.wg)(),(0,n.iD)("div",null,[(0,n._)("nav",null,[(0,n.Wm)(pt,{to:"/loginAdmin"},{default:(0,n.w5)((()=>[a])),_:1}),(0,n.Wm)(pt,{to:"/profilAdmin"},{default:(0,n.w5)((()=>[s])),_:1})]),(0,n._)("button",{onClick:e[0]||(e[0]=t=>ut.adminLogout()),class:"deconnexion"},"Déconnexion"),i,r,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.listeEleve,(t=>((0,n.wg)(),(0,n.iD)("div",{key:t._id},[(0,n._)("li",null,[(0,n._)("form",{onSubmit:(0,l.iM)((e=>ut.putEleve(t._id,t.prenom,t.nom)),["prevent"])},[(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.prenom=e,type:"text",class:"input"},null,8,p),[[l.nr,t.prenom]])]),(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.nom=e,type:"text",class:"input"},null,8,d),[[l.nr,t.nom]])]),m],40,u),(0,n._)("button",{onClick:e=>ut.delEleve(t._id),type:"submit",class:"input"},"Supprimer l'élève",8,c)])])))),128)),g,(0,n._)("div",h,[(0,n._)("form",{onSubmit:e[5]||(e[5]=(0,l.iM)(((...t)=>ut.addEleve&&ut.addEleve(...t)),["prevent"])),class:"form"},[f,(0,n._)("div",null,[b,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[1]||(e[1]=e=>t.eleve.email=e),type:"email",required:"",placeholder:"Entrer un email"},null,512),[[l.nr,t.eleve.email]])]),(0,n._)("div",null,[y,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[2]||(e[2]=e=>t.eleve.prenom=e),type:"text",placeholder:"Entrer un prénom",required:""},null,512),[[l.nr,t.eleve.prenom]])]),(0,n._)("div",null,[_,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[3]||(e[3]=e=>t.eleve.nom=e),type:"text",placeholder:"Entrer un nom"},null,512),[[l.nr,t.eleve.nom]])]),(0,n._)("div",null,[v,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[4]||(e[4]=e=>t.eleve.mdp=e),type:"password",pattern:"^([ a-zA-Z0-9@ *#]{3,15})$",placeholder:"Entrer un mot de passe"},null,512),[[l.nr,t.eleve.mdp]])]),w],32)]),E,k,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.listeProf,(t=>((0,n.wg)(),(0,n.iD)("div",{key:t._id},[(0,n._)("li",null,[(0,n._)("form",{onSubmit:(0,l.iM)((e=>ut.putProf(t._id,t.prenom,t.nom,t.dateFinContrat)),["prevent"])},[(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.prenom=e,type:"text",class:"input"},null,8,A),[[l.nr,t.prenom]])]),(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.nom=e,type:"text",class:"input"},null,8,S),[[l.nr,t.nom]])]),(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.dateFinContrat=e,type:"text",class:"input"},null,8,j),[[l.nr,t.dateFinContrat]])]),P],40,V),(0,n._)("button",{onClick:e=>ut.delProf(t._id),type:"submit",class:"input"},"Supprimer le professeur",8,U)])])))),128)),L,(0,n._)("div",M,[(0,n._)("form",{onSubmit:e[12]||(e[12]=(0,l.iM)(((...t)=>ut.addProf&&ut.addProf(...t)),["prevent"])),class:"form"},[z,(0,n._)("div",null,[$,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[6]||(e[6]=e=>t.prof.email=e),type:"email",required:"",placeholder:"Entrer un email"},null,512),[[l.nr,t.prof.email]])]),(0,n._)("div",null,[x,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[7]||(e[7]=e=>t.prof.prenom=e),type:"text",placeholder:"Entrer un prénom",required:""},null,512),[[l.nr,t.prof.prenom]])]),(0,n._)("div",null,[C,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[8]||(e[8]=e=>t.prof.nom=e),type:"text",placeholder:"Entrer un nom"},null,512),[[l.nr,t.prof.nom]])]),(0,n._)("div",null,[I,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[9]||(e[9]=e=>t.prof.mdp=e),type:"password",pattern:"^([ a-zA-Z0-9@ *#]{3,15})$",placeholder:"Entrer un mot de passe"},null,512),[[l.nr,t.prof.mdp]])]),(0,n._)("div",null,[D,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[10]||(e[10]=e=>t.prof.dateFinContrat=e),type:"text",placeholder:"Entrer une date de la forme 'JJ/MM'"},null,512),[[l.nr,t.prof.dateFinContrat]])]),(0,n._)("div",null,[T,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[11]||(e[11]=e=>t.prof.mat=e),type:"text",placeholder:"Entrer une matière"},null,512),[[l.nr,t.prof.mat]])]),F],32)]),N,O,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.listeMat,(t=>((0,n.wg)(),(0,n.iD)("div",{key:t._id},[(0,n._)("li",null,[(0,n._)("form",{onSubmit:(0,l.iM)((e=>ut.putMat(t._id,t.nom)),["prevent"])},[(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.nom=e,type:"text",class:"input"},null,8,q),[[l.nr,t.nom]])]),H],40,J),(0,n._)("button",{onClick:e=>ut.delMat(t._id),type:"submit",class:"input"},"Supprimer la matière",8,K)])])))),128)),Y,Z,((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(t.listeAdmin,(t=>((0,n.wg)(),(0,n.iD)("div",{key:t._id},[(0,n._)("li",null,[(0,n._)("form",{onSubmit:(0,l.iM)((e=>ut.putAdmin(t._id,t.prenom,t.nom)),["prevent"])},[(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.prenom=e,type:"text",class:"input"},null,8,G),[[l.nr,t.prenom]])]),(0,n._)("div",null,[(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e=>t.nom=e,type:"text",class:"input"},null,8,B),[[l.nr,t.nom]])]),Q],40,W),(0,n._)("button",{onClick:e=>ut.delAdmin(t._id),type:"submit",class:"input"},"Supprimer l'administrateur",8,R)])])))),128)),X,(0,n._)("div",tt,[(0,n._)("form",{onSubmit:e[17]||(e[17]=(0,l.iM)(((...t)=>ut.addAdmin&&ut.addAdmin(...t)),["prevent"])),class:"form"},[et,(0,n._)("div",null,[ot,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[13]||(e[13]=e=>t.admin.email=e),type:"email",required:"",placeholder:"Entrer un email"},null,512),[[l.nr,t.admin.email]])]),(0,n._)("div",null,[nt,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[14]||(e[14]=e=>t.admin.prenom=e),type:"text",placeholder:"Entrer un prénom",required:""},null,512),[[l.nr,t.admin.prenom]])]),(0,n._)("div",null,[lt,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[15]||(e[15]=e=>t.admin.nom=e),type:"text",placeholder:"Entrer un nom"},null,512),[[l.nr,t.admin.nom]])]),(0,n._)("div",null,[at,(0,n.wy)((0,n._)("input",{"onUpdate:modelValue":e[16]||(e[16]=e=>t.admin.mdp=e),type:"password",pattern:"^([ a-zA-Z0-9@ *#]{3,15})$",placeholder:"Entrer un mot de passe"},null,512),[[l.nr,t.admin.mdp]])]),st],32)])])}const rt=top.glob.serv,ut=rt+"eleve",pt=rt+"prof",dt=rt+"admin",mt=rt+"matiere";var ct={name:"admin",data:()=>({idAdmin:localStorage.getItem("idAdmin"),listeEleve:[],listeProf:[],listeMat:[],listeAdmin:[],eleve:{email:"",prenom:"",nom:"",mdp:""},prof:{email:"",prenom:"",nom:"",mdp:"",mat:""},admin:{email:"",prenom:"",nom:"",mdp:""}}),beforeMount(){try{this.getListeEleves(),this.getListeProfs(),this.getListeAdmins(),this.getListeMats()}catch{this.$router.push("./loginAdmin"),top.glob.toast("Vous n'êtes pas connecté","info")}},methods:{adminLogout(){localStorage.removeItem("tokenAdmin"),localStorage.removeItem("idAdmin"),localStorage.clear(),this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")},async getListeEleves(){try{let t=await fetch(ut,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});if(t.ok){let e=await t.json();this.listeEleve=e.eleves}else 401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):(console.log("Erreur du serveur"),top.glob.toast("Le chargement des donnés n'a pas pu être fait","warning"))}catch(t){console.log(t),top.glob.toast("Erreur","danger")}},async putEleve(t,e,o){await fetch(ut+"/"+t,{method:"PUT",body:JSON.stringify({prenom:e,nom:o}),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(top.glob.toast("Eleve mis à jour","success"),this.getListeEleves()):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la mise à jour de l'élève","warning")})).catch((t=>{console.log(t),top.glob.toast("Erreur","danger")}))},async addEleve(){await fetch(ut,{method:"POST",body:JSON.stringify(this.eleve),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(this.getListeEleves(),this.eleve={email:"",prenom:"",nom:"",mdp:""},top.glob.toast("Elève ajouté","success")):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de l'ajout de l'élève","warning")}))},async delEleve(t){const e=confirm("Voulez-vous confirmez la supression?");if(e)try{let e=await fetch(ut+"/"+t,{method:"DELETE",headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});e.ok?(top.glob.toast("Elève supprimé","success"),this.getListeEleves()):401==e.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la supression de l'élève","warning")}catch(o){console.log(o),top.glob.toast("Erreur","danger")}},async getListeProfs(){try{let t=await fetch(pt,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});if(t.ok){let e=await t.json();this.listeProf=e.profs}else 401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Le chargement des donnés n'a pas pu être fait","danger")}catch(t){console.log(t),top.glob.toast("Erreur","danger")}},async putProf(t,e,o,n){await fetch(pt+"/"+t,{method:"PUT",body:JSON.stringify({prenom:e,nom:o,dateFinContrat:n}),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(top.glob.toast("Prof mis à jour","success"),this.getListeProfs()):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la mise à jour du professeur","warning")})).catch((t=>{console.log(t),top.glob.toast("Erreur","danger")}))},async addProf(){await fetch(pt,{method:"POST",body:JSON.stringify(this.prof),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(this.getListeProfs(),this.getListeMats(),this.prof={email:"",prenom:"",nom:"",mdp:"",mat:""},top.glob.toast("Professeur ajouté","success")):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de l'ajout du professeur (la matière ou le professeur doivent être unique)","warning")})).catch((t=>{console.log(t),top.glob.toast("erreur","danger")}))},async delProf(t){const e=confirm("Voulez-vous confirmez la supression?");if(e)try{let e=await fetch(pt+"/"+t,{method:"DELETE",headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});e.ok?(top.glob.toast("Professeur supprimé","success"),this.getListeProfs()):401==e.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la supression du professeur","warning")}catch(o){console.log(o),top.glob.toast("Erreur","danger")}},async getListeMats(){try{let t=await fetch(mt,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});if(t.ok){let e=await t.json();this.listeMat=e.mats}else 401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Le chargement des donnés n'a pas pu être fait","warning")}catch(t){console.log(t),top.glob.toast("Erreur","danger")}},async putMat(t,e){await fetch(mt+"/"+t,{method:"PUT",body:JSON.stringify({nom:e}),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(top.glob.toast("Matière mis à jour","success"),this.getListeMats()):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de l'ajout de la matière","warning")})).catch((t=>{console.log(t),top.glob.toast("Erreur","warning")}))},async delMat(t){const e=confirm("Voulez-vous confirmez la supression?");if(e)try{let e=await fetch(mt+"/"+t,{method:"DELETE",headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});e.ok?(top.glob.toast("Matière supprimée","success"),this.getListeMats()):401==e.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la supression de la matière","warning")}catch(o){console.log(o),top.glob.toast("Erreur","danger")}},async getListeAdmins(){try{let t=await fetch(dt,{headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});if(t.ok){let e=await t.json();this.listeAdmin=e.admins}else 401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):(console.log("Erreur du serveur"),top.glob.toast("Le chargement des donnés n'a pas pu être fait","warning"))}catch(t){console.log(t),top.glob.toast("Erreur","warning")}},async putAdmin(t,e,o){await fetch(dt+"/"+t,{method:"PUT",body:JSON.stringify({prenom:e,nom:o}),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(top.glob.toast("Admin mis à jour","success"),this.getListeAdmins()):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la mise à jour de l'administrateur","warning")}))},async addAdmin(){await fetch(dt+"/creer/"+this.idAdmin,{method:"POST",body:JSON.stringify(this.admin),headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}}).then((t=>{t.ok?(this.getListeAdmins(),this.admin={email:"",prenom:"",nom:"",mdp:""},top.glob.toast("Administrateur ajouté","success")):401==t.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de l'ajout","warning")})).catch((t=>{console.log(t),top.glob.toast("Erreur","danger")}))},async delAdmin(t){const e=confirm("Voulez-vous confirmez la supression?");if(e)try{let e=await fetch(dt+"/"+t+"/"+this.idAdmin,{method:"DELETE",headers:{"content-type":"application/json",authorization:localStorage.getItem("tokenAdmin")}});e.ok?(top.glob.toast("Administrateur supprimé","success"),this.getListeAdmins()):401==e.status?(this.$router.push("/admin"),top.glob.toast("Vous n'êtes pas connecté","info")):top.glob.toast("Problème lors de la supression de l'administrateur (il doit toujours exister au moins un admin!)","warning")}catch(o){console.log(o),top.glob.toast("Erreur","danger")}}}},gt=o(89);const ht=(0,gt.Z)(ct,[["render",it]]);var ft=ht}}]);
//# sourceMappingURL=882.dd9965f6.js.map